seq_len(3)
seq_along(c('a', 'b', 'c'))
?nchar
formals(cat)
?cat
str(rnorm)
args(rnorm)
lm()
lm
args(lm)
str(lm)
search()
library(ggplot2)
search()
installed.packages()
View(installed.packages())
rnorm(10)
?rnorm
rnorm(10, 1, 1)
mean(rnorm(10, 1, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
?runif
matrix(1:4, 2, 2)
matrix(1:4, 2, 1)
matrix(1:4, 2, 3)
matrix(1:4, 2, 4)
matrix(1:4, 2, 4)[, 4]
matrix(1:4, 2, 4)[1, 4]
g(3, 10)
gl(3, 10)
?gl
gl(3)
gl(3, 1)
?split
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
split(x, gl(3, 10))
library(datasets)
View(airquality)
splitair <- split(airquality, airquality$Month)
splitair
str(splitair)
lapply(splitair, function(x) {colMeans(x[, c("Ozone", "Solar.R", "Wind")])})
sapply(splitair, function(x) {colMeans(x[, c("Ozone", "Solar.R", "Wind")])})
sapply(splitair, function(x) {colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm = TRUE)})
?interaction
?range
x <- matrix(rnorm(200), 20, 10)
x
View(x)
quantile(x[1,], probs = c(0.25, 0.75))
apply(x, 1, quantile, probs = c(0.25, 0.75))
?array
?sample
View(installed.packages())
library(ggplot2)
qplot
x <- c(-1, -0.8, -0.6, -0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 1)
y <- x^3
y
qplot(x, y)
qplot(y, x)
x <- c(1, 2, 2, 2, 3, 3)
qplot(x, binwidth = 1)
qplot(x)
qplot(x, binwidth = 1)
x2 <- c(1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4)
qplot(x2, binwidth = 1)
??sample
?sample
?range
1:10
testlist <- 1:10
for (i in seq_along(testlist)) {
}
for (i in seq_along(testlist)) {
print(i) }
for (i in seq_len(length(testlist))) {
print(i) }
for (i in seq_len(testlist)) {
print(i) }
q()
fy <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
company <- c("Apple","Apple","Apple","Google","Google","Google","Microsoft","Microsoft","Microsoft")
revenue <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
profit <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
companiesData <- data.frame(fy, company, revenue, profit)
companiesData <- mutate(companiesData, margin = round((profit/margin)*100),1)
library(dplyr)
companiesData <- mutate(companiesData, margin = round((profit/margin)*100),1)
companiesData <- mutate(companiesData, margin = round((profit/margin)*100),1)
?mutate
companiesData <- mutate(companiesData, margin = (profit/margin)*100)
companiesData <- mutate(companiesData, margin = round((profit/revenue)*100, 1))
View(companiesData)
myresults <- companiesData %>% group_by(company) %>% mutate(highestMargin = max(margin), lowestMargin = min(margin))
View(myresults)
highestProfitMargins <- companiesData %>% group_by(company) %>% summarise(bestMargin = max(margin))
View(highestProfitMargins)
library(plyr)
ddply(companiesData, 'company', summarise, bestMargin = max(margin))
ddply(companiesData, 'company', function(x) {x[x$margin==max(x$margin),]})
fy <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
company <- c("Apple","Apple","Apple","Google","Google","Google","Microsoft","Microsoft","Microsoft")
revenue <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
profit <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
companiesData <- data.frame(fy, company, revenue, profit)
companiesData$margin <- companiesData$profit/companiesData$revenue*100
View(companiesData)
companiesData$margin <- round(companiesData$profit/companiesData$revenue*100,1)
View(companiesData)
y <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
company <- c("Apple","Apple","Apple","Google","Google","Google","Microsoft","Microsoft","Microsoft")
revenue <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
profit <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
companiesData <- data.frame(fy, company, revenue, profit)
fy <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
company <- c("Apple","Apple","Apple","Google","Google","Google","Microsoft","Microsoft","Microsoft")
revenue <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
profit <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
companiesData <- data.frame(fy, company, revenue, profit)
companiesData$margin <- round(companiesData$profit/companiesData$revenue*100, 1)
library(plyr)
?ddply
companiesData[order(companiesData$margin),]
?order
companiesData[order(companiesData$margin, decreasing = T),]
library(dplyr)
companiesData %>% group_by(company) %>% arrange(margin)
companiesData %>% group_by(company) %>% arrange(margin, desc)
?arrange
companiesData %>% group_by(company) %>% arrange(desc(margin), .by_group=TRUE)
load("/media/umair/F00E03AB0E0369C4/Studies/GitRepos/Getting and Cleaning Data Project/UCI HAR Dataset/.RData")
View(mergedset)
library(tidyr)
library(dplyr)
View(mergedset)
colnames(mergedset)[3]
select(mergedset, tBodyAcc-mean()-X: ,)
select(mergedset, tBodyAcc-mean()-X: )
select(mergedset, 3:563)
colnames(mergedset)[563]
longset1 <- gather(mergedset, tBodyAcc-mean()-X:angle(Z,gravityMean), key = "key", value = "measurement")
longset1 <- gather(mergedset, `tBodyAcc-mean()-X`:`angle(Z,gravityMean)`, key = "key", value = "measurement")
colnames(longset1)
rm(longset1)
load("/media/umair/F00E03AB0E0369C4/Studies/GitRepos/Getting and Cleaning Data Project/UCI HAR Dataset/.RData")
library(dplyr)
library(tidyr)
vignette()
vignette(dplyr)
vignette('dplyr')
View(mergedset)
head(select(mergedset, -(subject:activity)))
str(mergedset)
mergedset <- as_tibble(mergedset)
str(mergedset)
mergedset <- data.table::data.table(mergedset)
str(mergedset)
select(mergedset, -(subject:activity))
select(mergedset, subject:activity)
dplyr::select(mergedset, subject:activity)
names(mergedset)[1:3]
select(mergedset, subject:activity)
class(mergedset)
install.packages('swirl')
library(swirl)
library(datasets)
data("cars")
View(cars)
?cars
with(cars, plot(speed, dist))
library(lattice)
state <- data.frame(state.x77, region = state.region)
View(cars)
View(state)
state.x77
?state.x77
state.abb
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
library(ggplot2)
data("mpg")
mpgframe <- data.frame(mpg)
View(mpgframe)
xyplot(hwy ~ displ, data = mpgframe)
qplot(displ, hwy, data = mpgframe)
sample(1:6, 2, replace = FALSE)
sum(sample(1:6, 2, replace = F))
qplot(sum(sample(1:6, 2, replace = F)))
hist(sum(sample(1:6, 2, replace = F)))
hist(replicate(sum(sample(1:6, 2, replace = F))), 10000)
hist(replicate(10000, sum(sample(1:6, 2, replace = F))))
library(ggplot2)
qplot(replicate(10000, sum(sample(1:6, 2, replace = F))))
qplot(replicate(10000, sum(sample(1:6, 2, replace = F))), binwidth = 1)
rm(list = ls())
source('~/.active-rstudio-document')
rolls <- replicate(10000, roll())
qplot(rolls, binwidth = 1)
qplot(replicate(10000, sum(sample(1:6, 2, replace = T))), binwidth = 1)
library(datasets)
table(airquality$Ozone)
hist(airquality$Ozone)
q()
rm(list = ls())
example(points)
?gl
q()
?par
?plot
?points
rm(list = ls())
rm(list = ls())
library(lattice)
library(datasets)
?transform
airquality$Month <- factor(airquality$Month)
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
?rep
library(ggplot2)
mpg
str(mpg)
xyplot(hwy ~ displ | drv, data = mpg)
xyplot(hwy ~ displ, data = mpg)
xyplot(hwy ~ displ | drv, data = mpg)
xyplot(hwy ~ displ | cyl, data = mpg)
summary(mgg$cyl)
summary(mpg$cyl)
str(mpg$cyl)
mpg$cyl <- factor(mpg$cyl)
xyplot(hwy ~ displ | cyl, data = mpg)
xyplot(hwy ~ displ | manufacturer, data = mpg)
qplot(displ, hwy, data = mpg, color = dvr)
qplot(displ, hwy, data = mpg, color = drv)
qplot(drv, data = mpg)
qplot(drv, data = mpg, fill = hwy)
qplot(drv, data = mpg, fill = class)
qplot(hwy, data = mpg, fill = drv)
q()
myedit
rm(list = ls())
q()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?xylot
?xyplot
?nlme
View(BodyWeight)
vignette()
?lattice
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2movies)
qplot(Wind, Ozone, data = airquality) + geom_smooth()
rep(1:3, each=4)
rnorm(12)
?rnorm
?rbinom
q()
q()
height <- c(4.0, 4.5, 5.0, 5.2, 5.4, 5.8, 6.1, 6.2, 6.4, 6.8)
weight <- c(42, 44, 49, 55, 53, 58, 60, 64, 66, 69)
datmat <- cbind(height, weight)
with(datmat, plot(height, weight))
View(datmat)
with(datmat, plot(height ~ weight))
rm(list = c(height, weight))
rm(list = (height, weight))
rm(list = list(height, weight))
rm(list = c('height', 'weight'))
with(datmat, plot(height ~ weight))
with(datmat, plot(height, weight))
plot(datmat[,1], datmat[,2])
transform(datmat)
datmat <- transform(datmat)
with(datmat, plot(height, weight))
model <- lm(height ~ weight, datmat)
abline(model)
abline(model, lwd = 2)
View(model)
abline(model, lwd = 2)
with(datmat, plot(height, weight))
abline(model, lwd = 2)
abline(lm(height ~ weight, datmat))
abline(lm(weight ~ height, datmat))
library(datasets)
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City", pch = 20))
abline(lm(Ozone ~ Wind, airquality))
par(mfrow = c(1,2))
with(airquality, {})
with(airquality, {)
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wind")
, plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")})
with(airquality, {plot(Wind, Ozone, main = "Ozone and Wind") plot(Solar.R, Ozone, main = "Ozone, and Solar Radiation") })
with(airquality, {plot(Wind, Ozone, main = "Ozone and Wind") + plot(Solar.R, Ozone, main = "Ozone, and Solar Radiation") })
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(airquality, { plot(Wind, Ozone, main = "Ozone and Wind") + plot(Solar.R, Ozone, main = "Ozone and Solar Radiation") + plot(Temp, Ozone, main = "Ozone and Temperature") + mtext("Ozone and Weather in New York City", outer = TRUE) })
rm(list = ls())
set.seed(19)
x <- rnorm(30)
y <- rnorm(30)
plot(x, y, col=rep(1:3, each = 10), pch = 19)
dev.off()
plot(x, y, col=rep(1:3, each = 10), pch = 19)
par(mfrow=c(1, 3))
plot(x, y, col=rep(1:3, each = 10), pch = 19)
reset.par()
dev.off()
plot(x, y, col=rep(1:3, each = 10), pch = 19)
legend("bottomright", legend = paste("Group", 1:3), col = 1:3, pch = 19, bty = 'n')
par(mfrow = c(1, 2))
image(volcano, col = heat.colors(10), main = "heat.colors()")
image(volcano, col = topo.colors(10), main = "topo.colors()")
heat.colors()
heat.colors(10)
?grey
pal <- colorRamp(c('red', 'blue'))
pal(0)
pal(1)
pal(0.5)
pal(2)
pal(-1)
pal(1)
pal(0.5)
seq(0, 1, len = 10)
pal(c('purple', 'black'))
pal <- colorRamp(c('purple', 'black'))
pal(0)
pal <- colorRampPalette(c('red', 'yellow'))
q()
set.seed(1234)
x <- rnorm(12, rep(1:3, each = 4), 0.2)
x <- rnorm(12, rep(c(1, 2, 1), each = 4), 0.2)
set.seed(1234)
x <- rnorm(12, rep(1:3, each = 4), 0.2)
y <- rnorm(12, rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col = 'blue', pch = 19, cex = 2)
text(x+0.05, y+0.05, labels=as.character(1:12))
df <- data.frame(x=x, y=y)
dist(df)
rdistxy <- as.matrix(dist(df))
diag(rdistxy)
diag(rdistxy) <- diag(rdistxy)+100000
diag(rdistxy)
rdistxy
rdistxy <- as.matrix(dist(df))
rdistxy
diag(rdistxy) <- diag(rdistxy)+100000
which(rdistxy == min(rdistxy))
which(rdistxy == min(rdistxy), arr.ind = TRUE)
min(rdistxy)
ind <- which(rdistxy == min(rdistxy), arr.ind = TRUE)
View(df)
?which
x
x[ind[1,]]
ind[1,]
par(mfrow = c(1, 2))
plot(x, y, col = 'blue', pch = 19, cex = 2, main="Data")
text(x+0.05, y+0.05, labels=as.character(1:12))
?text
points(x[ind[1,]], y[ind[1,]], col = 'orange', pch=19, cex=2)
library(dplyr)
hcluster <- hclust(dist(df))
dendro <- as.dendrogram(hcluster)
cutDendro <- cut(dendro, h = (hcluster$height[1] + 0.00001))
?cut
plot(cutDendro$lower[[11]], yaxt = 'n', main = "Begin building tree")
dendro
names(dendro)
hcluster
names(hcluster)
hcluster$height
order(rdistxy)
rdistxy[order(rdistxy)][3]
nextmin <- rdistxy[order(rdistxy)][3]
ind <- which(rdistxy == nextmin, arr.ind = TRUE)
ind
hclustering <- hclust(dist(data.frame(x=x, y=y)))
plot(hclustering)
dev.off()
plot(hclustering)
data = as.matrix(mtcars)
head(data)
heatmap(data)
heatmap(data, scale = 'column')
heatmap(data, scale = 'column', Colv = NA, Rowv = NA)
kmeansObj <- kmeans(df, centers = 3)
kmeansObj$cluster
kmeansObj$centers
plot(x, y)
plot(x, y, pch = 19, cex = 2, col = 'blue')
points(kmeansObj)
?par
points(kmeansObj, pch = 3)
points(kmeansObj$centers, pch = 3)
plot(x, y, pch = 19, cex = 2, col = c(rep('blue', 4), rep('orange', 4), rep('red', 4)))
points(kmeansObj$centers, pch = 3, col('blue', 'orange', 'red'))
points(kmeansObj$centers, pch = 3, col= c('blue', 'orange', 'red'))
points(kmeansObj$centers, pch = 3, col= c('blue', 'orange', 'red'), cex = 2)
rm(list = ls())
set.seed(1234)
10:1
q()
q()
library(dplyr)
"devtools" %in% installed.packages()
library(devtools)
"shiny" %in% installed.packages()
install github("StatsWithR/statsr")
install_github("StatsWithR/statsr")
q()
source('/media/umair/F00E03AB0E0369C4/projects/Furqan Ahmad/cryptotrackbot.R')
currtable[currtable$Symbol=='CPC',]
bitcoinfiltered[bitcoinfiltered$Symbol=='CPC',]
bitcoinfiltered2[bitcoinfiltered2$Symbol=='CPC',]
bitcoinfiltered2[bitcoinfiltered2$Symbol=='BTG',]
bitcoinfiltered[bitcoinfiltered$Symbol=='BTG',]
dupindex
bitcoif[15,]
bitcoinfiltered[15,]
bitcoinfiltered[67,]
bitcoinfiltered[dupindex,]
bitcoinfiltered[dupindex,1:3]
dupindex(!(bitcoinfiltered[dupindex,2]))
dupindex[!(bitcoinfiltered[dupindex,2])]
dupindex[(bitcoinfiltered[dupindex,2])]
bitcoinfiltered[dupindex,2]
bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name
bitcoinfiltered[dupindex[4],2]
bitcoinfiltered[dupindex[4],2] %in% bitcoinsheet$Exact.Name
bitcoinsheet[bitcoinsheet$Currency=='CPC']
bitcoinsheet[bitcoinsheet$Currency=='CPC',]
bitcoinsheet <- read.csv('bitcoinneeded.csv')
bitcoinsheet[bitcoinsheet$Currency=='CPC',]
bitcoinfiltered[dupindex[4],2] %in% bitcoinsheet$Exact.Name
bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name
which(bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name)
bitcoinfiltered[bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name,]
dupindex(which(bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name))
which(bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name)
dupindex[which(bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name)]
dupindex
bitcoinfiltered[dupindex,1:3]
bitcoinfiltered[115,2]
bitcoinfiltered[115,2] %in% bitcoinsheet$Exact.Name
View(bitcoinsheet)
"FAIR FairCoin" %in% bitcoinsheet$Exact.Name
bitcoinsheet[126,2]
str(bitcoinsheet$Exact.Name)
bitcoinsheet$Exact.Name <- as.character(bitcoinsheet$Exact.Name)
"FAIR FairCoin" %in% bitcoinsheet$Exact.Name
View(bitcoinsheet)
str(bitcoinsheet)
dupindex[which(bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name)]
bitcoinfiltered[dupindex,1:3]
dupindex[which(bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name)]
bitcoinfiltered[dupindex[which(bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name)],1:3]
"FAIR FairCoin" %in% bitcoinsheet$Exact.Name
bitcoinsheet[126,]
bitcoinsheet[126,2]
bitcoinsheet <- read.csv('bitcoinneeded.csv')
"FAIR FairCoin" %in% bitcoinsheet$Exact.Name
bitcoinsheet[126,2]
bitcoinsheet$Exact.Name <- as.character(bitcoinsheet$Exact.Name)
bitcoinsheet[126,2]
bitcoinsheet[195,2]
bitcoinsheet <- read.csv('bitcoinneeded.csv')
"FAIR FairCoin" %in% bitcoinsheet$Exact.Name
dupindex[which(bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name)]
bitcoinfiltered[dupindex[which(bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name)],]
bitcoinfiltered[dupindex[which(bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name)],1:3]
bitcoinfiltered[dupindex,1:3]
dupindex[which(bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name)]
dupindex[!(which(bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name))]
dupindex[which(!(bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name))]
dupindex
nrow(bitcoinfiltered)
nrow(bitcoinfiltered2)
nrow(bitcoinfiltered[-(dupindex[which(!(bitcoinfiltered[dupindex,2] %in% bitcoinsheet$Exact.Name))]),])
dupindex2
source('/media/umair/F00E03AB0E0369C4/projects/Furqan Ahmad/cryptotrackbot.R')
source('/media/umair/F00E03AB0E0369C4/projects/Furqan Ahmad/cryptotrackbot.R')
source('/media/umair/F00E03AB0E0369C4/projects/Furqan Ahmad/cryptotrackbot.R')
str_trim(bitcoinsheet$Exact.Name)
